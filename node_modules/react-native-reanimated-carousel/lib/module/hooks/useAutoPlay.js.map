{"version":3,"sources":["useAutoPlay.ts"],"names":["React","useAutoPlay","opts","autoPlay","autoPlayReverse","autoPlayInterval","carouselController","timer","useRef","pause","useCallback","current","clearInterval","run","setInterval","prev","next","useEffect"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAKJ;AACC,QAAM;AACFC,IAAAA,QAAQ,GAAG,KADT;AAEFC,IAAAA,eAAe,GAAG,KAFhB;AAGFC,IAAAA,gBAHE;AAIFC,IAAAA;AAJE,MAKFJ,IALJ;AAOA,QAAMK,KAAK,GAAGP,KAAK,CAACQ,MAAN,EAAd;AAEA,QAAMC,KAAK,GAAGT,KAAK,CAACU,WAAN,CAAkB,MAAM;AAClCH,IAAAA,KAAK,CAACI,OAAN,IAAiBC,aAAa,CAACL,KAAK,CAACI,OAAP,CAA9B;AACH,GAFa,EAEX,EAFW,CAAd;AAIA,QAAME,GAAG,GAAGb,KAAK,CAACU,WAAN,CAAkB,MAAM;AAChC,QAAIH,KAAK,CAACI,OAAV,EAAmB;AACfF,MAAAA,KAAK;AACR;;AAED,QAAI,CAACN,QAAL,EAAe;AACX;AACH;;AAEDI,IAAAA,KAAK,CAACI,OAAN,GAAgBG,WAAW,CAAC,MAAM;AAC9BV,MAAAA,eAAe,GACTE,kBAAkB,CAACS,IAAnB,EADS,GAETT,kBAAkB,CAACU,IAAnB,EAFN;AAGH,KAJ0B,EAIxBX,gBAJwB,CAA3B;AAKH,GAdW,EAcT,CACCI,KADD,EAECN,QAFD,EAGCC,eAHD,EAICC,gBAJD,EAKCC,kBALD,CAdS,CAAZ;AAsBAN,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AAClB,QAAId,QAAJ,EAAc;AACVU,MAAAA,GAAG;AACN,KAFD,MAEO;AACHJ,MAAAA,KAAK;AACR;;AACD,WAAOA,KAAP;AACH,GAPD,EAOG,CAACI,GAAD,EAAMJ,KAAN,EAAaN,QAAb,CAPH;AASA,SAAO;AACHU,IAAAA,GADG;AAEHJ,IAAAA;AAFG,GAAP;AAIH","sourcesContent":["import * as React from 'react';\nimport type { ICarouselController } from './useCarouselController';\n\nexport function useAutoPlay(opts: {\n    autoPlay?: boolean;\n    autoPlayInterval?: number;\n    autoPlayReverse?: boolean;\n    carouselController: ICarouselController;\n}) {\n    const {\n        autoPlay = false,\n        autoPlayReverse = false,\n        autoPlayInterval,\n        carouselController,\n    } = opts;\n\n    const timer = React.useRef<NodeJS.Timer>();\n\n    const pause = React.useCallback(() => {\n        timer.current && clearInterval(timer.current);\n    }, []);\n\n    const run = React.useCallback(() => {\n        if (timer.current) {\n            pause();\n        }\n\n        if (!autoPlay) {\n            return;\n        }\n\n        timer.current = setInterval(() => {\n            autoPlayReverse\n                ? carouselController.prev()\n                : carouselController.next();\n        }, autoPlayInterval);\n    }, [\n        pause,\n        autoPlay,\n        autoPlayReverse,\n        autoPlayInterval,\n        carouselController,\n    ]);\n\n    React.useEffect(() => {\n        if (autoPlay) {\n            run();\n        } else {\n            pause();\n        }\n        return pause;\n    }, [run, pause, autoPlay]);\n\n    return {\n        run,\n        pause,\n    };\n}\n"]}