{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Animated, { useSharedValue, withTiming, useAnimatedStyle } from 'react-native-reanimated';\nimport tailwind from 'tailwind-rn';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\nimport { songList } from \"../../assets/songList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar AudioControls = function AudioControls(_ref) {\n  var imageTransition = _ref.imageTransition,\n      songTitleContainerTransition = _ref.songTitleContainerTransition,\n      songTitleTransition = _ref.songTitleTransition,\n      authorNameTransition = _ref.authorNameTransition,\n      controlButtonTransition = _ref.controlButtonTransition,\n      playButtonSize = _ref.playButtonSize,\n      nextButtonSize = _ref.nextButtonSize,\n      isShowing = _ref.isShowing,\n      isPlaying = _ref.isPlaying,\n      playButtonMargin = _ref.playButtonMargin,\n      setIsPlaying = _ref.setIsPlaying;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      sound = _useState2[0],\n      setSound = _useState2[1];\n\n  var _useState3 = useState({\n    shouldPlay: true\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      status = _useState4[0],\n      setStatus = _useState4[1];\n\n  var _useState5 = useState(songList[0].albums[0].tracks[0].trackUrl),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sourceSound = _useState6[0],\n      setSourceSound = _useState6[1];\n\n  console.log(sourceSound);\n  useEffect(function () {\n    Audio.setAudioModeAsync({\n      allowsRecordingIOS: false,\n      interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n      playsInSilentModeIOS: true,\n      interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n      shouldDuckAndroid: true,\n      staysActiveInBackground: true,\n      playThroughEarpieceAndroid: true\n    });\n  }, []);\n  useEffect(function () {\n    return sound ? function () {\n      console.log('Unloading Sound');\n      sound.unloadAsync();\n    } : undefined;\n  }, [sound]);\n\n  var playAudio = function playAudio() {\n    var _await$Audio$Sound$cr, _sound;\n\n    return _regeneratorRuntime.async(function playAudio$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(typeof sound === 'object')) {\n              _context.next = 6;\n              break;\n            }\n\n            setPlaying(true);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 4:\n            _context.next = 14;\n            break;\n\n          case 6:\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(Audio.Sound.createAsync(sourceSound));\n\n          case 8:\n            _await$Audio$Sound$cr = _context.sent;\n            _sound = _await$Audio$Sound$cr.sound;\n            setSound(_sound);\n            setPlaying(true);\n            _context.next = 14;\n            return _regeneratorRuntime.awrap(_sound.playAsync());\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var pauseAudio = function pauseAudio() {\n    var result;\n    return _regeneratorRuntime.async(function pauseAudio$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            setPlaying(false);\n            _context2.prev = 1;\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(sound.getStatusAsync());\n\n          case 4:\n            result = _context2.sent;\n\n            if (result.isLoaded) {\n              if (result.isPlaying === true) {\n                setPlaying();\n                sound.pauseAsync();\n              }\n            }\n\n            _context2.next = 10;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](1);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[1, 8]], Promise);\n  };\n\n  var nextSong = function nextSong() {\n    var i;\n    return _regeneratorRuntime.async(function nextSong$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setPlaying();\n            sound.pauseAsync();\n            i = 0;\n\n            if (typeof sound === 'object') {\n              setSourceSound(songList[0].albums[0].tracks[i].trackUrl);\n            }\n\n            setPlaying();\n            _context3.next = 7;\n            return _regeneratorRuntime.awrap(sound.playAsync());\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var setPlaying = function setPlaying() {\n    if (isPlaying) {\n      setIsPlaying(false);\n    } else {\n      setIsPlaying(true);\n    }\n  };\n\n  return _jsxs(Animated.View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(Animated.View, {\n      style: [tailwind(\"w-1/6 h-full absolute left-1 rounded-lg\"), {\n        overflow: 'hidden'\n      }, imageTransition],\n      children: _jsx(Animated.Image, {\n        source: {\n          uri: 'https://i.imgur.com/FEMO9iT.jpg'\n        },\n        style: {\n          width: '100%',\n          height: '100%',\n          borderRadius: 10\n        },\n        resizeMode: \"contain\"\n      })\n    }), _jsxs(Animated.View, {\n      style: [tailwind(\"w-3/6 px-3 absolute left-12\"), songTitleContainerTransition],\n      children: [_jsx(Animated.Text, {\n        style: [tailwind(\"font-bold\"), songTitleTransition],\n        children: \"Eulogy for a Rock Band\"\n      }), _jsx(Animated.Text, {\n        style: [tailwind(\"text-sm\"), authorNameTransition],\n        children: \"Weezer\"\n      })]\n    }), _jsxs(Animated.View, {\n      style: [tailwind(\"flex-row items-center justify-evenly absolute right-3\"), controlButtonTransition],\n      children: [isShowing ? _jsx(Pressable, {\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            opacity: pressed ? 0.5 : 1\n          }];\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"skip-previous\",\n          size: 32,\n          color: \"black\"\n        })\n      }) : null, _jsx(View, {\n        children: isPlaying ? _jsx(Pressable, {\n          style: function style(_ref3) {\n            var pressed = _ref3.pressed;\n            return [{\n              opacity: pressed ? 0.5 : 1\n            }];\n          },\n          onPress: pauseAudio,\n          children: _jsx(MaterialIcons, {\n            name: \"pause-circle-filled\",\n            size: playButtonSize,\n            color: \"black\"\n          })\n        }) : _jsx(Pressable, {\n          style: function style(_ref4) {\n            var pressed = _ref4.pressed;\n            return [{\n              opacity: pressed ? 0.5 : 1\n            }];\n          },\n          onPress: playAudio,\n          children: _jsx(MaterialIcons, {\n            name: \"play-circle-filled\",\n            size: playButtonSize,\n            color: \"black\",\n            style: {\n              marginHorizontal: playButtonMargin\n            }\n          })\n        })\n      }), _jsx(Pressable, {\n        style: function style(_ref5) {\n          var pressed = _ref5.pressed;\n          return [{\n            opacity: pressed ? 0.5 : 1\n          }];\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"skip-next\",\n          size: nextButtonSize,\n          color: \"black\"\n        })\n      })]\n    })]\n  });\n};\n\nexport default AudioControls;\nvar styles = StyleSheet.create({});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/musicPlayerApp/src/components/AudioControls.js"],"names":["React","useState","useEffect","useRef","Animated","useSharedValue","withTiming","useAnimatedStyle","tailwind","MaterialIcons","Audio","songList","AudioControls","imageTransition","songTitleContainerTransition","songTitleTransition","authorNameTransition","controlButtonTransition","playButtonSize","nextButtonSize","isShowing","isPlaying","playButtonMargin","setIsPlaying","sound","setSound","shouldPlay","status","setStatus","albums","tracks","trackUrl","sourceSound","setSourceSound","console","log","setAudioModeAsync","allowsRecordingIOS","interruptionModeIOS","INTERRUPTION_MODE_IOS_DO_NOT_MIX","playsInSilentModeIOS","interruptionModeAndroid","INTERRUPTION_MODE_ANDROID_DUCK_OTHERS","shouldDuckAndroid","staysActiveInBackground","playThroughEarpieceAndroid","unloadAsync","undefined","playAudio","setPlaying","playAsync","Sound","createAsync","pauseAudio","getStatusAsync","result","isLoaded","pauseAsync","nextSong","i","flex","overflow","uri","width","height","borderRadius","pressed","opacity","marginHorizontal","styles","StyleSheet","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { StyleSheet, Text, View, Pressable } from 'react-native'\nimport Animated, {\n    useSharedValue,\n    withTiming,\n    useAnimatedStyle\n} from 'react-native-reanimated';\nimport tailwind from 'tailwind-rn';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport { Audio } from 'expo-av';\n\n//Components\nimport { songList } from '../../assets/songList';\n\nconst AudioControls = ({ \n    imageTransition,\n    songTitleContainerTransition,\n    songTitleTransition,\n    authorNameTransition,\n    controlButtonTransition,\n    playButtonSize,\n    nextButtonSize,\n    isShowing,\n    isPlaying,\n    playButtonMargin,\n    setIsPlaying\n}) => {\n    const [ sound, setSound ] = useState();\n    const [ status, setStatus ] = useState({\n      shouldPlay: true\n    })\n    const [ sourceSound, setSourceSound ] = useState(songList[0].albums[0].tracks[0].trackUrl)\n\n    console.log(sourceSound)\n  \n    useEffect(() => {\n      Audio.setAudioModeAsync({\n        allowsRecordingIOS: false,\n        interruptionModeIOS: Audio.INTERRUPTION_MODE_IOS_DO_NOT_MIX,\n        playsInSilentModeIOS: true,\n        interruptionModeAndroid: Audio.INTERRUPTION_MODE_ANDROID_DUCK_OTHERS,\n        shouldDuckAndroid: true,\n        staysActiveInBackground: true,\n        playThroughEarpieceAndroid: true\n      })\n    }, [])\n\n    useEffect(() => {\n        return sound\n          ? () => {\n              console.log('Unloading Sound');\n              sound.unloadAsync(); }\n          : undefined;\n      }, [sound]);\n  \n    const playAudio = async () => {\n        if (typeof sound === 'object') {\n            setPlaying(true)\n            await sound.playAsync()\n        } else {\n            const { sound } = await Audio.Sound.createAsync(sourceSound)\n            setSound(sound)\n            setPlaying(true)\n            await sound.playAsync()\n        }\n    }\n  \n    const pauseAudio = async () => {\n        setPlaying(false)\n      try {\n        const result = await sound.getStatusAsync();\n        if (result.isLoaded) {\n          if (result.isPlaying === true) {\n            setPlaying()\n            sound.pauseAsync();\n          }\n        }\n      } catch (error) {}\n    }\n\n    const nextSong = async () => {\n        setPlaying()\n        sound.pauseAsync();\n\n        let i = 0;\n\n        if(typeof sound === 'object') {\n            setSourceSound(songList[0].albums[0].tracks[i].trackUrl)\n        }\n\n        setPlaying();\n        await sound.playAsync()\n\n    }\n\n    const setPlaying = () => {\n        if (isPlaying) {\n            setIsPlaying(false)\n        } else {\n            setIsPlaying(true)\n        }\n    }\n\n    return (\n        <Animated.View style={{ flex: 1 }}>\n            <Animated.View style={[ tailwind(`w-1/6 h-full absolute left-1 rounded-lg`), { overflow: 'hidden' }, imageTransition ]}>\n                <Animated.Image \n                    source={{ uri: 'https://i.imgur.com/FEMO9iT.jpg' }}\n                    style={{ width: '100%', height: '100%', borderRadius: 10 }}\n                    resizeMode='contain'\n                />\n            </Animated.View>\n            <Animated.View style={[ tailwind(`w-3/6 px-3 absolute left-12`), songTitleContainerTransition ]}>\n                <Animated.Text style={[ tailwind(`font-bold`), songTitleTransition ]}>Eulogy for a Rock Band</Animated.Text>\n                <Animated.Text style={[ tailwind(`text-sm`), authorNameTransition ]}>Weezer</Animated.Text>\n            </Animated.View>\n            <Animated.View style={[ tailwind(`flex-row items-center justify-evenly absolute right-3`), controlButtonTransition ]}>\n                { isShowing ? \n                    <Pressable\n                        style={({ pressed }) => [\n                            { opacity: pressed ? 0.5 : 1 }\n                        ]}\n                    >\n                        <MaterialIcons name=\"skip-previous\" size={32} color=\"black\" />\n                    </Pressable>\n                :\n                    null\n                }\n                <View>\n                    { isPlaying ?\n                        <Pressable \n                            style={({ pressed }) => [\n                                { opacity: pressed ? 0.5 : 1 }\n                            ]}\n                            onPress={pauseAudio}\n                        >\n                            <MaterialIcons name=\"pause-circle-filled\" size={ playButtonSize } color=\"black\" />\n                        </Pressable> \n                        :\n                        <Pressable \n                            style={({ pressed }) => [\n                                { opacity: pressed ? 0.5 : 1 }\n                            ]}\n                            onPress={playAudio}\n                        >\n                            <MaterialIcons name=\"play-circle-filled\" size={ playButtonSize } color=\"black\" style={{ marginHorizontal: playButtonMargin }} />\n                        </Pressable>\n                    }\n                </View>\n                <Pressable\n                    style={({ pressed }) => [\n                        { opacity: pressed ? 0.5 : 1 }\n                    ]}\n                >\n                    <MaterialIcons name=\"skip-next\" size={ nextButtonSize } color=\"black\" />\n                </Pressable>\n            </Animated.View>\n        </Animated.View>\n    )\n}\n\nexport default AudioControls\n\nconst styles = StyleSheet.create({})\n"]},"metadata":{},"sourceType":"module"}