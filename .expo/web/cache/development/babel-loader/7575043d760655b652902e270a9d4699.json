{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useRef, useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport tailwind from 'tailwind-rn';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Animated, { useSharedValue, withTiming, useAnimatedStyle } from 'react-native-reanimated';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\nimport AudioControls from \"../components/AudioControls\";\nimport * as AuthSession from 'expo-auth-session';\nimport { useNavigation } from '@react-navigation/native';\nimport PlayerBar from \"../components/PlayerBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowHeight = Dimensions.get('window').height;\nvar windowWidth = Dimensions.get('window').width;\n\nvar HomeScreen = function HomeScreen() {\n  var barWidth = useSharedValue(0);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var navigation = useNavigation();\n\n  var getStatusBar = function getStatusBar() {\n    if (Platform.OS === 'ios') {\n      var height = getStatusBarHeight();\n      setStatusBarHeight(height);\n    } else {\n      setStatusBarHeight(StatusBar.currentHeight);\n    }\n  };\n\n  useEffect(function () {\n    getStatusBar();\n  }, []);\n  var searchConfig = {\n    duration: 700\n  };\n  var animatedStyles = useAnimatedStyle(function () {\n    var _f = function _f() {\n      return {\n        width: withTiming(barWidth.value, searchConfig)\n      };\n    };\n\n    _f._closure = {\n      withTiming: withTiming,\n      barWidth: barWidth,\n      searchConfig: searchConfig\n    };\n    _f.asString = \"function _f(){const{withTiming,barWidth,searchConfig}=jsThis._closure;{return{width:withTiming(barWidth.value,searchConfig)};}}\";\n    _f.__workletHash = 9203117659140;\n    _f.__location = \"/Users/kylecash/Documents/GitHub/musicPlayerApp/src/screens/HomeScreen.js (47:44)\";\n    _f.__optimalization = 2;\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  return _jsxs(SafeAreaView, {\n    style: tailwind(\"flex-1 bg-white h-full\"),\n    children: [_jsxs(View, {\n      style: [tailwind(\"absolute top-8 left-3 self-center flex-row items-center bg-gray-100 rounded-full p-1\"), styles.shadow],\n      children: [_jsx(Pressable, {\n        style: function style(_ref) {\n          var pressed = _ref.pressed;\n          return [{\n            opacity: pressed ? 0.7 : 1\n          }, tailwind(\"\")];\n        },\n        onPress: function onPress() {\n          if (!expanded) {\n            setExpanded(true);\n            barWidth.value = 250;\n          } else {\n            setExpanded(false);\n            barWidth.value = 0;\n          }\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"search\",\n          size: 32,\n          color: \"gray\"\n        })\n      }), _jsx(Animated.View, {\n        style: [tailwind(\"\"), animatedStyles],\n        children: _jsx(TextInput, {\n          placeholder: \"Search\"\n        })\n      })]\n    }), _jsx(View, {\n      style: [tailwind(\"absolute top-8 right-3 self-center flex-row items-center bg-gray-100 rounded-full p-1\"), styles.shadow],\n      children: _jsx(Pressable, {\n        style: function style(_ref2) {\n          var pressed = _ref2.pressed;\n          return [{\n            opacity: pressed ? 0.7 : 1\n          }, tailwind(\"\")];\n        },\n        children: _jsx(MaterialIcons, {\n          name: \"person\",\n          size: 32,\n          color: \"gray\"\n        })\n      })\n    }), _jsx(View, {\n      style: tailwind(\"mt-14\"),\n      children: _jsx(Text, {\n        style: tailwind(\"text-3xl font-bold text-center\"),\n        children: \"Listen Now\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [{\n          opacity: pressed ? 0.7 : 1\n        }, tailwind(\"w-2/3 h-1/3 self-center rounded-lg\")];\n      },\n      onPress: function onPress() {\n        return navigation.navigate('AlbumScreen');\n      },\n      children: _jsx(Image, {\n        source: {\n          uri: 'https://i.imgur.com/FEMO9iT.jpg'\n        },\n        style: [{\n          width: '100%',\n          height: '100%'\n        }, tailwind(\"rounded-lg\")],\n        resizeMode: \"contain\"\n      })\n    }), _jsx(PlayerBar, {})]\n  });\n};\n\nexport default HomeScreen;\nvar styles = StyleSheet.create({\n  shadow: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.30,\n    shadowRadius: 4.65,\n    elevation: 8\n  }\n});","map":{"version":3,"sources":["/Users/kylecash/Documents/GitHub/musicPlayerApp/src/screens/HomeScreen.js"],"names":["React","useRef","useState","useEffect","tailwind","MaterialIcons","Animated","useSharedValue","withTiming","useAnimatedStyle","getStatusBarHeight","AudioControls","AuthSession","useNavigation","PlayerBar","windowHeight","Dimensions","get","height","windowWidth","width","HomeScreen","barWidth","expanded","setExpanded","navigation","getStatusBar","Platform","OS","setStatusBarHeight","StatusBar","currentHeight","searchConfig","duration","animatedStyles","value","styles","shadow","pressed","opacity","navigate","uri","StyleSheet","create","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport { StyleSheet, Text, View, SafeAreaView, Image, Pressable, TextInput, Dimensions, StatusBar, Platform } from 'react-native'\nimport tailwind from 'tailwind-rn';\nimport { MaterialIcons } from '@expo/vector-icons';\nimport Animated, {\n    useSharedValue,\n    withTiming,\n    useAnimatedStyle\n} from 'react-native-reanimated';\nimport { getStatusBarHeight } from 'react-native-status-bar-height';\nimport AudioControls from '../components/AudioControls';\nimport * as AuthSession from 'expo-auth-session';\nimport { useNavigation } from '@react-navigation/native';\n\n//Components\nimport PlayerBar from '../components/PlayerBar';\n\n\nconst windowHeight = Dimensions.get('window').height\nconst windowWidth = Dimensions.get('window').width\n\nconst HomeScreen = () => {\n    const barWidth = useSharedValue(0)\n\n    const [ expanded, setExpanded ] = useState(false)\n\n    const navigation = useNavigation();\n\n\n    const getStatusBar = () => {\n        if (Platform.OS === 'ios') {\n            const height = getStatusBarHeight()\n            setStatusBarHeight(height)\n        } else {\n            setStatusBarHeight(StatusBar.currentHeight)\n        }\n    }\n\n    useEffect(() => {\n        getStatusBar()\n    }, [])\n\n    const searchConfig = {\n        duration: 700\n    }\n\n    const animatedStyles = useAnimatedStyle(() => {\n        return {\n            width: withTiming(barWidth.value, searchConfig)\n        }\n    })\n\n    return (\n        <SafeAreaView style={ tailwind(`flex-1 bg-white h-full`) }>\n            <View style={[ tailwind(`absolute top-8 left-3 self-center flex-row items-center bg-gray-100 rounded-full p-1`), styles.shadow ]}>\n                <Pressable\n                    style={({ pressed }) => [\n                        { opacity: pressed ? 0.7 : 1 },\n                        tailwind(``)\n                    ]}\n                    onPress={() => {\n                        if (!expanded) {\n                            setExpanded(true)\n                            barWidth.value = 250\n                        } else {\n                            setExpanded(false)\n                            barWidth.value = 0\n                        }\n                    }}\n                >\n                    <MaterialIcons name=\"search\" size={32} color=\"gray\" />\n                </Pressable>\n                <Animated.View\n                    style={[ tailwind(``), animatedStyles ]}\n                >\n                        <TextInput \n                            placeholder='Search'\n                        />\n                </Animated.View>\n            </View>\n            <View style={[ tailwind(`absolute top-8 right-3 self-center flex-row items-center bg-gray-100 rounded-full p-1`), styles.shadow ]}>\n                <Pressable\n                    style={({ pressed }) => [\n                        { opacity: pressed ? 0.7 : 1 },\n                        tailwind(``)\n                    ]}\n                >\n                    <MaterialIcons name=\"person\" size={32} color=\"gray\" />\n                </Pressable>\n            </View>\n            <View style={ tailwind(`mt-14`) }>\n                <Text style={ tailwind(`text-3xl font-bold text-center`) }>Listen Now</Text>\n            </View>\n            <Pressable \n                style={({ pressed }) => [\n                    { opacity: pressed ? 0.7 : 1 },\n                    tailwind(`w-2/3 h-1/3 self-center rounded-lg`)\n                ]}\n                onPress={() => navigation.navigate('AlbumScreen')}\n            >\n                <Image \n                    source={{ uri: 'https://i.imgur.com/FEMO9iT.jpg' }}\n                    style={[ { width: '100%', height: '100%' }, tailwind(`rounded-lg`) ]}\n                    resizeMode='contain'\n                />\n            </Pressable>\n            <PlayerBar />\n        </SafeAreaView>\n    )\n}\n\nexport default HomeScreen\n\nconst styles = StyleSheet.create({\n    shadow: {\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 4,\n        },\n        shadowOpacity: 0.30,\n        shadowRadius: 4.65,\n\n        elevation: 8,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}